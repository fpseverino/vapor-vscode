{
    "Endpoint": {
        "prefix": "endpoint",
        "body": [
            "@Sendable",
            "func ${1:functionName}(req: Request) async throws -> ${2:ReturnValue} {",
            "\t${3:statements}",
            "}"
        ],
        "description": "Endpoint function to use in `RouteCollection`s"
    },
    "AsyncMiddleware": {
        "prefix": "middleware",
        "body": [
            "struct ${1:Name}Middleware: AsyncMiddleware {",
            "\tfunc respond(to request: Request, chainingTo next: AsyncResponder) async throws -> Response {",
            "\t\t${2:return try await next.respond(to: request)}",
            "\t}",
            "}"
        ],
        "description": "AsyncMiddleware structure"
    },
    "req.parameters.get": {
        "prefix": "parameter",
        "body": [
            "req.parameters.get(\"${1:parameterName}\")"
        ],
        "description": "Extract parameter from request path"
    },
    "try req.content.decode": {
        "prefix": "decode",
        "body": [
            "try req.content.decode(${1:Type}.self)"
        ],
        "description": "Decode request content"
    },
    "throw Abort": {
        "prefix": "abort",
        "body": [
            "throw Abort(.${1:code})"
        ],
        "description": "Throw an HTTP error"
    }
}